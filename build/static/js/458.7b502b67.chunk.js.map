{"version":3,"file":"static/js/458.7b502b67.chunk.js","mappings":"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","sources":["routes/Reflections/index.js","../node_modules/dom-to-image/src/dom-to-image.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Link, useNavigate, useParams} from 'react-router-dom';\nimport './reflections.css';\nimport backToWheeelIcon from '../../images/backToWheeelIcon.png';\nimport domtoimage from 'dom-to-image';\nimport mixpanel from 'mixpanel-browser';\n\nimport APIService from \"../../service/APIService\";\nimport {SaveButton} from \"../../components/SaveButton\";\n\nconst Reflections = ({data, setData}) => {\n    const [responseData, setResponseData] = useState(null);\n    let exported = sessionStorage.getItem('exported');\n    const [isExported, setIsExported] = useState(exported);\n    let history = useNavigate();\n    const { hash } = useParams();\n    const { id } = useParams();\n\n    useEffect(() => {\n        if (hash) {\n            sessionStorage.setItem('hash_participant', hash);\n            APIService.getParticipantByHash(hash)\n                .then(response => {\n                    sessionStorage.setItem('exported', 1);\n                    sessionStorage.setItem('id_participant', response.data.id);\n\n                    mixpanel.identify(response.data.id);\n                    if (id) {\n                        history(\"/reflection/\"+id);\n                    }\n                    request();\n                })\n                .catch(error => {\n                    history(\"*\");\n                    console.error('Error fetching data:', error);\n                });\n        } else {\n            request();\n        }\n    }, [isExported]);\n\n    function request() {\n        APIService.getReflections(sessionStorage.getItem('id_participant'))\n            .then(response => {\n                setResponseData(response.data.reflections);\n            })\n            .catch(error => {\n                history(\"*\");\n                console.error('Error fetching data:', error);\n            });\n    }\n\n    const exportReflectionsRequest = () => {\n        let counts = {};\n        for (const key in responseData) {\n            counts[responseData[key]['name_life_sphere']] = responseData[key]['reflections_answers_count'];\n        }\n        mixpanel.track('Export Reflections', counts);\n\n        setIsExported('1');\n        sessionStorage.setItem('exported', 1);\n        domtoimage.toPng(document.getElementById('reflections'))\n            .then(function (dataImg) {\n                APIService.exportReflections(\n                    sessionStorage.getItem('id_participant'),\n                    sessionStorage.getItem('hash_participant'),\n                    dataImg)\n                    .then(response => {\n                        //history(\"/reflections/\");\n                    })\n                    .catch(error => {\n                        history(\"*\");\n                        console.error('Error fetching data:', error);\n                    });\n            });\n    };\n\n    const sendAnalytics = (name, count) => {\n        mixpanel.track('Go to Sphere', {\n            'From': 'Reflection Progress',\n            'To': name,\n            'Reflections': count\n        });\n    };\n\n    const sendGoBackAnalytics = () => {\n        mixpanel.track('Back to Balance Wheel');\n    };\n\n    const renderExport = () => {\n        return (\n            <div>\n                {isExported ? (\n                    <p>Reflections have been sent to your email</p>\n                ) : (\n                    <Link to=\"/reflections\">\n                        <SaveButton\n                            text={'Export Reflection'}\n                            onclick={exportReflectionsRequest}\n                        />\n                    </Link>\n                )}\n            </div>\n        );\n    };\n\n    return (\n        <div className={'content-div'}>\n            <Link to={`/ViewBalanceWheel/${sessionStorage.getItem('hash_participant')}`} onClick={sendGoBackAnalytics}>\n                    <img className={'back-to-wheel-icon'} src={backToWheeelIcon} alt=\"backToWheeelIcon\" />\n                    <label className={\"back-to-wheel\"}>\n                        Back to your Balance Wheel\n                    </label>\n            </Link>\n            <h1>Reflection Progress</h1>\n            <p>Choose the sphere to continue reflection</p>\n\n            {responseData ? (\n                <div className={'reflections-div'}>\n                    <div id=\"reflections\" className={'reflection-progress-icons'}>\n                        {responseData.map((reflection, index) => {\n                            return (\n                                    <div className={'reflection-progress-icon-div'}>\n                                        <Link to={`/reflection/${reflection.id_life_sphere}`}\n                                              onClick={() => sendAnalytics(reflection.name_life_sphere, reflection.reflections_answers_count)}\n                                        >\n                                            <p>{reflection.name_life_sphere} <b>{reflection.balance_wheels_mark}</b></p>\n                                            <img className={'reflection-progress-icon'}\n                                                 src={require('../../images/reflection/' + reflection.icon_name_life_sphere + '.png')}\n                                            />\n                                            <p className={'p-mark-' + reflection.reflections_answers_count}>{reflection.reflections_answers_count}/20</p>\n                                        </Link>\n                                    </div>\n                            );\n                        })}\n                    </div>\n                    {renderExport()}\n                </div>\n            ) : (\n                <p>Loading data...</p>\n            )}\n        </div>\n    );\n}\n\nexport default Reflections","(function (global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (typeof module !== 'undefined')\n        module.exports = domtoimage;\n    else\n        global.domtoimage = domtoimage;\n\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function (node) {\n                return cloneNode(node, options.filter, true);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function (clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n            .then(util.canvasToBlob);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if(typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if(typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(100))\n            .then(function (image) {\n                var canvas = newCanvas(domNode);\n                canvas.getContext('2d').drawImage(image, 0, 0);\n                return canvas;\n            });\n\n        function newCanvas(domNode) {\n            var canvas = document.createElement('canvas');\n            canvas.width = options.width || util.width(domNode);\n            canvas.height = options.height || util.height(domNode);\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function (clone) {\n                return cloneChildren(node, clone, filter);\n            })\n            .then(function (clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function (child) {\n                    done = done\n                        .then(function () {\n                            return cloneNode(child, filter);\n                        })\n                        .then(function (childClone) {\n                            if (childClone) parent.appendChild(childClone);\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                function copyStyle(source, target) {\n                    if (source.cssText) target.cssText = source.cssText;\n                    else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function (name) {\n                            target.setProperty(\n                                name,\n                                source.getPropertyValue(name),\n                                source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    clone.className = clone.className + ' ' + className;\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                    style.getPropertyValue(name) +\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function (attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function (cssText) {\n                var styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function () {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function (node) {\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(node);\n            })\n            .then(util.escapeXhtml)\n            .then(function (xhtml) {\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n            })\n            .then(function (foreignObject) {\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n                    foreignObject + '</svg>';\n            })\n            .then(function (svg) {\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\n            });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function (resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function () {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            return new Promise(function (resolve, reject) {\n                var image = new Image();\n                image.onload = function () {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if(domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function (resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if(domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if(split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if(placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function () {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if(placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (url) {\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (data) {\n                    return util.dataAsUrl(data, util.mimeType(url));\n                })\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n                });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    var done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (string) {\n                            return inline(string, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    try {\n                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                    } catch (e) {\n                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (data) {\n                        return util.dataAsUrl(data, util.mimeType(element.src));\n                    })\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve, reject) {\n                            element.onload = resolve;\n                            element.onerror = reject;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n                .then(function () {\n                    if (node instanceof HTMLImageElement)\n                        return newImage(node).inline();\n                    else\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function (child) {\n                                return inlineAll(child);\n                            })\n                        );\n                });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                    .then(function (inlined) {\n                        node.style.setProperty(\n                            'background',\n                            inlined,\n                            node.style.getPropertyPriority('background')\n                        );\n                    })\n                    .then(function () {\n                        return node;\n                    });\n            }\n        }\n    }\n})(this);\n"],"names":["_ref","data","setData","responseData","setResponseData","useState","exported","sessionStorage","getItem","isExported","setIsExported","history","useNavigate","hash","useParams","id","request","APIService","getReflections","then","response","reflections","catch","error","console","useEffect","setItem","getParticipantByHash","mixpanel","exportReflectionsRequest","counts","key","domtoimage","document","getElementById","dataImg","exportReflections","_jsxs","className","children","Link","to","concat","onClick","sendGoBackAnalytics","_jsx","src","backToWheeelIcon","alt","map","reflection","index","id_life_sphere","sendAnalytics","name","name_life_sphere","count","reflections_answers_count","balance_wheels_mark","require","icon_name_life_sphere","SaveButton","text","onclick","global","util","escape","string","replace","parseExtension","mimeType","url","extension","toLowerCase","WOFF","JPEG","mimes","dataAsUrl","content","type","isDataUrl","search","canvasToBlob","canvas","toBlob","Promise","resolve","binaryString","window","atob","toDataURL","split","length","binaryArray","Uint8Array","i","charCodeAt","Blob","resolveUrl","baseUrl","doc","implementation","createHTMLDocument","base","createElement","head","appendChild","a","body","href","getAndEncode","TIMEOUT","impl","options","cacheBust","test","Date","getTime","placeholder","XMLHttpRequest","onreadystatechange","done","ontimeout","timeout","responseType","open","send","imagePlaceholder","readyState","status","encoder","FileReader","onloadend","result","readAsDataURL","fail","message","uid","fourRandomChars","Math","random","pow","toString","slice","delay","ms","arg","setTimeout","asArray","arrayLike","array","push","escapeXhtml","makeImage","uri","reject","image","Image","onload","onerror","width","node","leftBorder","px","rightBorder","scrollWidth","height","topBorder","bottomBorder","scrollHeight","match","exec","styleProperty","value","getComputedStyle","getPropertyValue","parseFloat","newUtil","inliner","URL_REGEX","inlineAll","get","nothingToInline","readUrls","urls","forEach","inline","shouldProcess","filter","dataUrl","RegExp","urlAsRegex","newInliner","fontFaces","resolveAll","readAll","webFonts","all","webFont","cssStrings","join","styleSheets","cssRules","sheet","bind","e","log","rule","CSSRule","FONT_FACE_RULE","style","rules","newWebFont","webFontRule","parentStyleSheet","cssText","newFontFaces","images","Element","inlineBackground","HTMLImageElement","newImage","childNodes","child","background","inlined","setProperty","getPropertyPriority","element","newImages","defaultOptions","undefined","toSvg","toPng","draw","toJpeg","quality","toPixelData","getContext","getImageData","copyOptions","cloneNode","embedFonts","inlineImages","clone","bgcolor","backgroundColor","Object","keys","property","setAttribute","XMLSerializer","serializeToString","xhtml","foreignObject","svg","makeSvgDataUri","domNode","ctx","fillStyle","fillRect","newCanvas","drawImage","root","HTMLCanvasElement","original","cloneChildrenInOrder","parent","childClone","cloneChildren","cloneStyle","clonePseudoElements","copyUserInput","fixSvg","copyStyle","source","target","copyProperties","clonePseudoElement","styleElement","formatPseudoElementStyle","selector","formatCssText","formatCssProperties","createTextNode","formatProperty","HTMLTextAreaElement","innerHTML","HTMLInputElement","SVGElement","SVGRectElement","attribute","getAttribute","processClone","styleNode","module","exports"],"sourceRoot":""}